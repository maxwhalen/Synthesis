:root {
  --block-color: #4CC4F1;
  --block-glow: #18C3F7;
  --neon-blue: #00F3FF;
  --ice-blue: #E0F7FF;
  --deep-blue: #0B1E3B;
  --text-glow: 0 0 10px rgba(255, 255, 255, 0.8);
  --button-font: -apple-system, "SF Pro Display", "Segoe UI", system-ui, sans-serif;
  --number-font: "Orbitron", "Rajdhani", "Audiowide", "Chakra Petch", var(--button-font);
}

@keyframes gradientShift {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

@keyframes float {
  0%, 100% { transform: translateY(0); }
  50% { transform: translateY(-2px); }
}

@keyframes geometryFloat {
  0% { transform: translate(0, 0); }
  25% { transform: translate(2px, 2px); }
  50% { transform: translate(0, 4px); }
  75% { transform: translate(-2px, 2px); }
  100% { transform: translate(0, 0); }
}

.comparison-widget {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 100%;
  height: 100vh;
  position: relative;
  background: linear-gradient(-45deg, var(--deep-blue) 0%, #1A2B4D 25%, #243B6B 50%, #1A2B4D 75%, var(--deep-blue) 100%);
  background-size: 400% 400%;
  animation: gradientShift 15s ease infinite;
  border-radius: 0;
  padding: 20px;
  box-shadow: 0 0 40px rgba(0, 243, 255, 0.1);
  overflow: hidden;
}

.comparison-widget::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image: 
    radial-gradient(circle at 20% 20%, rgba(0, 243, 255, 0.03) 0%, transparent 50%),
    radial-gradient(circle at 80% 80%, rgba(0, 243, 255, 0.03) 0%, transparent 50%),
    linear-gradient(45deg, transparent 48%, rgba(0, 243, 255, 0.02) 49%, rgba(0, 243, 255, 0.02) 51%, transparent 52%),
    linear-gradient(-45deg, transparent 48%, rgba(0, 243, 255, 0.02) 49%, rgba(0, 243, 255, 0.02) 51%, transparent 52%);
  background-size: 100% 100%, 100% 100%, 60px 60px, 60px 60px;
  animation: geometryFloat 8s ease-in-out infinite;
  pointer-events: none;
  opacity: 0.6;
}

.mode-controls, .control-panel {
  padding: 12px;
  display: flex;
  justify-content: center;
  width: 100%;
}

.mode-controls > div, .control-panel > div {
  display: flex;
  gap: 8px;
  justify-content: center;
}

.stacks-container {
  position: relative;
  width: 100%;
  flex: 1;
  margin: 20px 0;
  display: flex;
  justify-content: center;
  align-items: center;
}

.block-stack {
  position: absolute;
  height: 100%;
  width: 100px;
  display: flex;
  align-items: center;
  padding: 20px 0;
}

.blocks-area {
  position: relative;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: 100%;
}

.blocks-wrapper {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 2px;
  padding: 10px 0;
}

.block-stack.left {
  left: 35%;
  transform: translateX(-50%);
}

.block-stack.right {
  left: 65%;
  transform: translateX(20%);
}

.block {
  width: 70px;
  height: 40px;
  background: linear-gradient(135deg, var(--block-color) 0%, var(--block-glow) 100%);
  border-radius: 8px;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  margin: 4px 0;
  position: relative;
  box-shadow: 0 0 15px rgba(76, 196, 241, 0.3);
  animation: float 2s ease-in-out infinite;
  backdrop-filter: blur(5px);
  border: 1px solid rgba(255, 255, 255, 0.1);
}

.block:hover {
  transform: translateY(-2px);
  box-shadow: 0 0 20px rgba(76, 196, 241, 0.5);
}

@keyframes float {
  0%, 100% { transform: translateY(0); }
  50% { transform: translateY(-2px); }
}

.stack-controls {
  position: absolute;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 4px;
  top: 50%;
  transform: translateY(-50%);
}

.stacks-container.addRemove .stack-controls {
  display: flex;
}

.block-stack.left .stack-controls {
  right: calc(100% + 35px);
}

.block-stack.right .stack-controls {
  left: calc(100% - 15px);
}

.stack-button {
  display: none;
  padding: 8px;
  border: 2px solid var(--neon-blue);
  background: rgba(0, 243, 255, 0.1);
  cursor: pointer;
  font-family: var(--button-font);
  font-size: 20px;
  font-weight: 600;
  transition: all 0.2s;
  width: 36px;
  height: 36px;
  align-items: center;
  justify-content: center;
  color: var(--neon-blue);
  border-radius: 8px;
  text-shadow: 0 0 8px var(--neon-blue);
  box-shadow: 0 0 15px rgba(0, 243, 255, 0.2);
  backdrop-filter: blur(5px);
  letter-spacing: 0;
}

.stacks-container.addRemove .stack-button {
  display: flex;
}

.stack-button:hover:not(:disabled) {
  background: rgba(0, 243, 255, 0.2);
  box-shadow: 0 0 20px rgba(0, 243, 255, 0.4);
  transform: translateY(-1px);
  text-shadow: 0 0 12px var(--neon-blue);
}

.stack-button:active:not(:disabled) {
  transform: translateY(1px);
  box-shadow: 0 0 10px rgba(0, 243, 255, 0.3);
}

.stack-button:disabled {
  opacity: 0.3;
  cursor: not-allowed;
  border-color: rgba(0, 243, 255, 0.3);
}

.stack-value {
  width: 36px;
  height: 36px;
  line-height: 36px;
  text-align: center;
  font-family: var(--number-font);
  font-size: 28px;
  font-weight: 600;
  user-select: none;
  border: none;
  background: transparent;
  color: white;
  cursor: pointer;
  text-shadow: var(--text-glow);
  transition: all 0.2s ease;
  letter-spacing: 1px;
}

.stack-value input {
  width: 36px;
  height: 36px;
  text-align: center;
  font-family: var(--number-font);
  font-size: 28px;
  font-weight: 600;
  border: none;
  background: transparent;
  color: white;
  padding: 0;
  margin: 0;
  outline: none;
  cursor: text;
  text-shadow: var(--text-glow);
  letter-spacing: 1px;
}

.stack-value input:focus {
  background: transparent;
}

.comparison-lines {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
}

.student-line {
  stroke: white;
  stroke-width: 8;
  stroke-linecap: round;
  pointer-events: none;
  fill: none;
  opacity: 0.9;
  filter: drop-shadow(0 0 2px rgba(0, 0, 0, 0.5)) drop-shadow(0 0 5px var(--neon-blue));
  transition: all 0.3s ease;
}

.student-line.completed {
  stroke-width: 10;
  filter: drop-shadow(0 0 2px rgba(0, 0, 0, 0.5)) drop-shadow(0 0 10px var(--neon-blue));
  opacity: 1;
}

.correct-line {
  stroke: white;
  filter: drop-shadow(0 0 2px rgba(0, 0, 0, 0.5)) drop-shadow(0 0 10px #00FF9D);
}

.incorrect-line {
  stroke: white;
  filter: drop-shadow(0 0 2px rgba(0, 0, 0, 0.5)) drop-shadow(0 0 10px #FF3D71);
}

.answer-line {
  stroke: white;
  stroke-width: 12;
  stroke-dasharray: 12 6;
  pointer-events: none;
  fill: none;
  opacity: 0.7;
  filter: drop-shadow(0 0 2px rgba(0, 0, 0, 0.5)) drop-shadow(0 0 5px var(--neon-blue));
}

.mode-button {
  padding: 10px 20px;
  border: 2px solid var(--neon-blue);
  border-radius: 8px;
  background: rgba(0, 243, 255, 0.1);
  cursor: pointer;
  font-family: var(--button-font);
  font-size: 14px;
  font-weight: 500;
  transition: all 0.2s;
  white-space: nowrap;
  width: max-content;
  color: var(--ice-blue);
  text-shadow: 0 0 8px rgba(0, 243, 255, 0.5);
  box-shadow: 0 0 15px rgba(0, 243, 255, 0.2);
  backdrop-filter: blur(5px);
  letter-spacing: 0.5px;
}

.mode-button:hover {
  background: rgba(0, 243, 255, 0.15);
  box-shadow: 0 0 20px rgba(0, 243, 255, 0.4);
  transform: translateY(-1px);
  text-shadow: 0 0 12px rgba(0, 243, 255, 0.7);
}

.mode-button:active {
  transform: translateY(1px);
  box-shadow: 0 0 10px rgba(0, 243, 255, 0.3);
}

.mode-button.active {
  background: var(--neon-blue);
  color: var(--deep-blue);
  border-color: white;
  box-shadow: 0 0 25px rgba(0, 243, 255, 0.5);
  text-shadow: none;
  font-weight: 600;
}

.stacks-container.drawCompare {
  cursor: default;
}

/* Add styles for the connection zones */
.connection-zone {
  position: absolute;
  width: 70px;
  height: 45px;
  background: rgba(74, 144, 226, 0.1);
  cursor: pointer;
  transform: translateX(-50%);
  left: 50%;
  z-index: 10;
  border-radius: 4px;
  transition: background-color 0.2s;
}

.stacks-container.drawCompare .connection-zone {
  display: block;
}

.connection-zone.top {
  top: -20px;
}

.connection-zone.bottom {
  bottom: -20px;
}

.connection-zone:hover {
  background: rgba(74, 144, 226, 0.1);
}

/* Style for zones that are already connected */
.connection-zone.connected {
  cursor: not-allowed;
}

/* Style for the current drawing line */
.drawing-line {
  stroke: white;
  stroke-width: 8;
  stroke-linecap: round;
  pointer-events: none;
  fill: none;
  opacity: 0.9;
  filter: drop-shadow(0 0 2px rgba(0, 0, 0, 0.5)) drop-shadow(0 0 5px var(--neon-blue));
  will-change: d;
  transform: translate3d(0, 0, 0);
}

.drawing-line.discarding {
  animation: fallAndFade 0.3s cubic-bezier(0.4, 0, 0.2, 1) forwards;
  will-change: transform, opacity;
}

/* Add hover state for blocks in compare mode */
.stacks-container.drawCompare .block {
  cursor: pointer;
}

.stacks-container.drawCompare .block:hover {
  background-color: #357abd;
}

.blocks-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 4px;
  padding: 10px 0;
}

/* Add hover and active states for blocks in compare mode */
.stacks-container.drawCompare .block {
  cursor: pointer;
}

.stacks-container.drawCompare .block:hover {
  background-color: #357abd;
  transform: scale(1.05);
}

.stacks-container.drawCompare .block:active {
  background-color: #2868b0;
  transform: scale(0.95);
}

/* Style the drawing line */
.drawing-line {
  stroke: white;
  stroke-width: 8;
  stroke-linecap: round;
  pointer-events: none;
  fill: none;
  opacity: 0.9;
  filter: drop-shadow(0 0 2px rgba(0, 0, 0, 0.5)) drop-shadow(0 0 5px var(--neon-blue));
  will-change: d;
  transform: translate3d(0, 0, 0);
}

/* Style completed lines */
.student-line {
  stroke: white;
  stroke-width: 8;
  stroke-linecap: round;
  pointer-events: none;
  fill: none;
  opacity: 0.9;
  filter: drop-shadow(0 0 2px rgba(0, 0, 0, 0.5)) drop-shadow(0 0 5px var(--neon-blue));
  transition: all 0.3s ease;
}

.student-line.completed {
  stroke-width: 10;
  filter: drop-shadow(0 0 2px rgba(0, 0, 0, 0.5)) drop-shadow(0 0 10px var(--neon-blue));
  opacity: 1;
}

.correct-line {
  stroke: white;
  filter: drop-shadow(0 0 2px rgba(0, 0, 0, 0.5)) drop-shadow(0 0 10px #00FF9D);
}

.incorrect-line {
  stroke: white;
  filter: drop-shadow(0 0 2px rgba(0, 0, 0, 0.5)) drop-shadow(0 0 10px #FF3D71);
}

.answer-line {
  stroke: white;
  stroke-width: 12;
  stroke-dasharray: 12 6;
  pointer-events: none;
  fill: none;
  opacity: 0.7;
  filter: drop-shadow(0 0 2px rgba(0, 0, 0, 0.5)) drop-shadow(0 0 5px var(--neon-blue));
}

@keyframes fallAndFade {
  0% {
    transform: translateY(0);
    opacity: 1;
  }
  100% {
    transform: translateY(100px);
    opacity: 0;
  }
}

.drawing-line.discarding {
  animation: fallAndFade 0.3s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.shadow-line {
  stroke: white;
  stroke-width: 4;
  stroke-linecap: round;
  pointer-events: none;
  fill: none;
  opacity: 0.5;
  filter: drop-shadow(0 0 2px rgba(0, 0, 0, 0.5));
  transform: translateY(-0.5px);
}

.drawing-line.shadow-line {
  stroke: white;
}

.student-line.shadow-line {
  stroke: white;
}

.student-line.shadow-line.correct-line {
  stroke: white;
  filter: drop-shadow(0 0 2px rgba(0, 0, 0, 0.5)) drop-shadow(0 0 10px #00FF9D);
}

.student-line.shadow-line.incorrect-line {
  stroke: white;
  filter: drop-shadow(0 0 2px rgba(0, 0, 0, 0.5)) drop-shadow(0 0 10px #FF3D71);
}

.drawing-line {
  stroke: white;
  stroke-width: 8;
  stroke-linecap: round;
  pointer-events: none;
  fill: none;
}

.drawing-line.discarding {
  animation: fallAndFade 0.3s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

@keyframes fallAndFade {
  0% {
    transform: translateY(0);
    opacity: 1;
  }
  100% {
    transform: translateY(100px);
    opacity: 0;
  }
}

/* Remove all color-related styles */
.correct-line,
.incorrect-line {
  stroke: white;
}

.answer-line {
  stroke: white;
  stroke-width: 12;
  stroke-dasharray: 12 6;
  pointer-events: none;
  fill: none;
  opacity: 0.7;
}

.comparator {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  width: 80px;
  height: 60px;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 5;
}

/* Add hover effect for stack values */
.stack-value:hover {
  text-shadow: 0 0 15px var(--neon-blue), 0 0 20px var(--neon-blue);
  transform: scale(1.05);
}

.stack-value input:focus {
  text-shadow: 0 0 15px var(--neon-blue), 0 0 20px var(--neon-blue);
  transform: scale(1.05);
} 